int score = 0;
int timing = 600; 
cat[] cats; 
seal[] seals;
player emo;
///value define
void setup() {
  size(1000, 800);

  emo = new player(500, 400);
  cats = new cat[2];
  seals = new seal[2];
  for (int i=0; i<4; i++) {
    if (i<2) {
      cats[i]= new cat(100*(i+1), 200*(i+1), 2*(i+1));
      cats[i].vx=5;
      cats[i].vy=3*(i+1);
    } else {
      seals[i-2]=new seal(100*(i-1), 200*(i-1), 2*(i-1));
      seals[i-2].vx=5;
      seals[i-2].vy=3*(i+1);
    }
  }
}

void draw() {
  background(80, 220, 20);

  emo.moveEmoji();
  emo.display();
  ///make emoji

  for (int i=0; i<2; i++) {
    emo.checkCollison(cats[i]);
    emo.checkCollison(seals[i]);
    cats[i].updateShapePosition();
    cats[i].display();
    seals[i].updateShapePosition();
    seals[i].display();
  }
  displayScore();
  time();
  if (timing == 0) {
    gameOver();
  }
}



///show the time and score
void displayScore() {
  fill(0);
  textSize(24);
  text("Score: " + score, 10, 30);
  text("Time: " + timing / 20, 550, 30);
}
///time speed
void time() {
  if (frameCount % 1.5 == 0 && timing > 0) {
    timing--;
  }
}
///over part of  text size location,and textbox color
void gameOver() {
  fill(100, 80, 240);
  noStroke();
  rect(100, 400, 450, 60);
  fill(0);
  textSize(24);
  text("You get", 100, 440);
  text(score, 450, 440);
  noLoop();
}


class block {
  float x, y, d, vx, vy;

  block(float x, float y, float d) {
    this.x = x;
    this.y = y;
    this.d = d;
  }

  void updateShapePosition() {
    x += vx;
    y += vy;
    if (x>width || x<0) vx = -vx;
    if (y>width || y<0) vy = -vy;
  }
}
class cat extends block{
  cat(float x, float y, float d){
    super(x, y, d);
  }
    
      void display() {
    triangle(x-8*d, y-3*d, x-8*d, y-8*d, x-3*d, y-3*d);   //귀
    triangle(x+8*d, y-3*d, x+8*d, y-8*d, x+3*d, y-3*d);
    ellipse(x, y, 18*d, 15*d); //머리
    line(x+5*d, y+3*d, x+10*d, y+3*d); //수염
    line(x+5*d, y+4*d, x+10*d, y+4*d);
    line(x+5*d, y+2*d, x+10*d, y+2*d);
    line(x-5*d, y+3*d, x-10*d, y+3*d);
    line(x-5*d, y+4*d, x-10*d, y+4*d);
    line(x-5*d, y+2*d, x-10*d, y+2*d);
    arc(x-0.5*d, y+1.5*d, d, 2*d, 0, PI); //입
    arc(x+0.5*d, y+1.5*d, d, 2*d, 0, PI);
    fill(0);
    circle(x+4*d, y-d, 1.5*d);      //눈
    circle(x-4*d, y-d, 1.5*d);
    fill(255);
  }
}

class seal extends block {
  seal(float x, float y, float d){
    super(x, y, d);
  }
   
   void display() {
    ellipse(x, y, 40*d, 30*d);
    //물범 코
    strokeWeight(5);
    triangle(x-2*d, y, x, y+4*d, x+2*d, y);
    strokeWeight(3);
    point(x-d, y+5);
    point(x+d, y+5);
    //물범 입
    line(x, y+4*d, x, y+6*d);
    arc(x-4*d, y+6*d, 8*d, 8*d, 0, PI/2);
    arc(x+4*d, y+6*d, 8*d, 8*d, PI/2, PI);
    //물범 눈
    circle(x-10*d, y-5*d, 12*d);
    circle(x+10*d, y-5*d, 12*d);
    fill(0, 0, 0);
    circle(x-10*d, y-5*d, 10*d);
    circle(x+10*d, y-5*d, 10*d);
    fill(255, 255, 255);
    circle(x-8*d, y-8*d, d);
    circle(x+12*d, y-8*d, d);
    //물범 수염
    line(x-10*d, y+2*d, x-24*d, y+4*d);
    line(x-10*d, y+3*d, x-24*d, y+6*d);
    line(x+10*d, y+2*d, x+24*d, y+4*d);
    line(x+10*d, y+3*d, x+24*d, y+6*d);
  }
}
class player {
  float x, y, d;
  player(float a, float b) {
    x = a;
    y = b;
    d = 10;
  }
  void display() {
    fill(250, 10, 100);
    ellipse(x, y, d * 10, d * 8);
    stroke(180, 150, 100); // face

    fill(150, 120, 90);
    circle(x - 2 * d, y - 0.7 * d, d * 1.5);
    circle(x + 2 * d, y - 0.7 * d, d * 1.5); // eye

    fill(25, 10, 90);
    arc(x, y, d, d * 2, 0, PI / 2); // nose

    fill(10, 120, 255);
    arc(x, y + d * 1.5, d * 1.5, d * 2, 0, PI); // mouth
    fill(255);
  }

  void checkCollison(block a) {
    if(dist(a.x, a.y, x, y) < a.d*3 + d){
      x = random(0,1000);
      y = random(0,800);
      score +=10;
    }
  }
  void moveEmoji() {
    if (keyPressed) {

      if (key == 'a' && x > 0) {
        x -= 10;
      }
      if (key == 'd' && x < width) {
        x += 10;
      }
      if (key == 'w' && y > 0) {
        y -= 10;
      }
      if (key == 's' && y < height) {
        y += 10;
      }
    }
  }
}
